import React, { useEffect } from "react";
import Dashboard from "./body/dashboard/Dashboard";
import Sidebar from "./sidebar/Sidebar";
import Header from "./header/Header";
import Welcome from "./body/welcome/Welcome";
import Head from "next/head";
import styles from "../../styles/Home.module.scss";
import { useDispatch, useSelector } from "react-redux";
import { useRouter } from "next/router";
import { useState } from "react";
import { confirmLog } from "../../redux/userSlice";
// import { useMediaQuery } from "@mui/material";

const RouteOnAuth = ({ children, incomingPage, auth }) => {
  const router = useRouter();

  useEffect(() => {
    if (auth && router.route.includes("/auth/")) router.push("/");
  }, [children]);

  return router.route.includes("/auth/") && !auth ? (
    <>{incomingPage}</>
  ) : (
    <>{children}</>
  );
};

const Layouts = ({ children }) => {
  const dispatch = useDispatch();
  const [logged, setLogging] = useState();

  const user = useSelector((state) => state.userReducer);
  useEffect(() => {
    const token = localStorage.getItem("token");
    if (token) dispatch(confirmLog(true));
    else dispatch(confirmLog(false));
  }, [user]);

  useEffect(() => {
    //redirect to root path if user isn't there
    if (user.auth) {
      setLogging(true);
    } else {
      setLogging(false);
    }
  }, [user.auth]);
  console.log(user.userData);
  return (
    <>
      <Head>
        <title>Bridgeon</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* {Changing layout on route changes} */}

      <RouteOnAuth incomingPage={children} auth={logged}>
        <main className={styles.main}>
          {/* {authorized users only can asses dashboard} */}
          {logged ? (
            <>
              <section className={styles.layout}>
                <Sidebar />
                <div className={styles.body}>
                  <Header logged={logged} user={user.userData} />
                  {children}
                </div>
              </section>
            </>
          ) : (
            <>
              <Welcome />
            </>
          )}
        </main>
      </RouteOnAuth>
    </>
  );
};

export default Layouts;
